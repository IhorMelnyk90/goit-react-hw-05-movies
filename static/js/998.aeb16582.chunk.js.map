{"version":3,"file":"static/js/998.aeb16582.chunk.js","mappings":"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","sources":["Api/requests.jsx","components/MovieDetails/MovieDetails.styled.jsx","components/MovieDetails/MovieDetails.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst MY_KEY = '38a870c0e4485eebd742c83e630c16d3';\n\nexport const getTrending = async () => {\n  const res = await axios.get(`/trending/movie/day?api_key=${MY_KEY}`);\n  const trending = await res.data.results;\n  return trending;\n};\n\nexport const searchMovies = async (query, page) => {\n  const res = await axios.get(`/search/movie?api_key=${MY_KEY}&page=${page}&language=en&query=${query}`);\n  const movie = await res.data.results;\n  return movie;\n};\n\nexport const getDetails = async idMovie => {\n  const res = await axios.get(`/movie/${idMovie}?api_key=${MY_KEY}`);\n  const details = await res.data;\n  return details;\n};\n\nexport const getCredits = async idMovie => {\n  const res = await axios.get(`/movie/${idMovie}/credits?api_key=${MY_KEY}&language=en-US`);\n  const credits = await res.data;\n  return credits;\n};\n\n\nexport const getReviews = async idMovie => {\n  const res = await axios.get(`/movie/${idMovie}/reviews?api_key=${MY_KEY}`);\n  const reviews = await res.data;\n  return reviews;\n};\n \n\n\n\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const LinkBox = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  color: blueviolet;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n`;\n\nexport const Poster = styled.img`\n  display: block;\n  max-width: 100%;\n  height: auto;\n  border-radius: 8px;\n  box-shadow: 4px 10px 5px 0px rgba(0, 0, 0, 0.75);\n`;\n\nexport const List = styled.ul`\n  padding: 15px;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Title2 = styled.h2`\n  margin-bottom: 15px;\n`;\n\nexport const Title3 = styled.h3`\n  margin-bottom: 15px;\n`;\n\nexport const GenreBox = styled.div`\n  display: flex;\n`;\n\nexport const MovieInfoBox = styled.div`\n  padding: 15px;\n`;\n\nexport const MovieInfo = styled.p`\n  margin-bottom: 20px;\n  font-size: large;\n  font-weight: bold;\n`;\n\nexport const MovieInfoLink = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 5px;\n  }\n`;\n\nexport const MovieNavLink = styled(NavLink)`\n  color: darkslategrey;\n\n  &.active {\n    color: darkred;\n  }\n`;\n","import {\n  useParams,\n  useLocation,  \n  Link,\n  Outlet,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getDetails } from 'Api/requests';\n\nimport Loader from 'components/Loader';\nimport {\n  LinkBox,\n  Container,\n  Poster,\n  List,\n  Item,\n  Title2,\n  Title3,\n  GenreBox,\n  MovieInfoBox,\n  MovieInfo,\n  MovieInfoLink,\n  MovieNavLink,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const movieId = useParams();\n  const idMovie = Object.values(movieId)[0];\n  const location = useLocation();\n  const goBackUrl = location?.state?.from ?? '/';\n\n  useEffect(() => {\n    async function fetchMovie() {\n      setLoading(true);\n      try {\n        const movie = await getDetails(idMovie);\n        setMovie(movie);\n      } catch (error) {\n        alert('Movie is not found');\n      } finally {\n        setLoading(false);\n      }\n    }\n    fetchMovie();\n  }, [idMovie]);\n\n  const defaultPoster = `https://i.pinimg.com/200x/e4/71/1e/fea9bd6cc64d250f3b3bb2ecec82173d.jpg`;\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <LinkBox>\n        <Link to={goBackUrl}>Go back</Link>\n      </LinkBox>\n      {movie && (\n        <div>\n          <Container>\n            <Poster\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n                  : defaultPoster\n              }\n              alt={movie.title}\n            />\n            <List>\n              <Item>\n                <Title2>{movie.title}</Title2>\n                <p>\n                  Rating:\n                  {movie.vote_average\n                    ? movie.vote_average\n                    : 'No rating for that movie'}\n                </p>\n              </Item>\n              <Item>\n                <Title3>Overview</Title3>\n                {movie.overview ? (\n                  <p>{movie.overview}</p>\n                ) : (\n                  <p>There is no overview for that movie</p>\n                )}\n              </Item>\n              <Item>\n                <Title3>Genres</Title3>\n                <GenreBox>\n                  {movie.genres.length > 0 ? (\n                    <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n                  ) : (\n                    <p>No genres found</p>\n                  )}\n                </GenreBox>\n              </Item>\n            </List>\n          </Container>\n          <MovieInfoBox>\n            <MovieInfo>Additional information</MovieInfo>\n            <ul>\n              <MovieInfoLink>\n                <MovieNavLink\n                  to={`/movies/${movie.id}/cast`}\n                  state={{ from: goBackUrl }}\n                >\n                  Cast\n                </MovieNavLink>\n              </MovieInfoLink>\n              <MovieInfoLink>\n                <MovieNavLink\n                  to={`/movies/${movie.id}/reviews`}\n                  state={{ from: goBackUrl }}\n                >\n                  Reviews\n                </MovieNavLink>\n              </MovieInfoLink>\n            </ul>\n          </MovieInfoBox>\n        </div>\n      )}\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["axios","MY_KEY","getTrending","res","data","results","trending","searchMovies","query","page","movie","getDetails","idMovie","details","getCredits","credits","getReviews","reviews","LinkBox","styled","Container","Poster","List","Item","Title2","Title3","GenreBox","MovieInfoBox","MovieInfo","MovieInfoLink","MovieNavLink","NavLink","useState","setMovie","loading","setLoading","movieId","useParams","Object","values","location","useLocation","goBackUrl","state","from","useEffect","alert","fetchMovie","Loader","to","src","poster_path","alt","title","vote_average","overview","genres","length","map","genre","name","join","id","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","value"],"sourceRoot":""}